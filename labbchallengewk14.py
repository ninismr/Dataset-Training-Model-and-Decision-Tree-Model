# -*- coding: utf-8 -*-
"""LabBChallengeWk14.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1_DP0MaZ50yBbyi-xWM1WQFhrEua84KzS
"""

import pandas as pd

df = pd.read_csv('./titanic.csv')
df = df.dropna(subset = ['Age'])

df.head()

inputs = df.drop('Survived', axis = 'columns')
target = df['Survived']

from sklearn.preprocessing import LabelEncoder

le_Sex = LabelEncoder()
inputs['Sex_n'] = le_Sex.fit_transform(inputs['Sex'])

inputs

inputs_n = inputs.drop(['PassengerId', 'Name', 'Sex',	
                        'SibSp', 'Parch',	'Ticket',	'Cabin', 
                        'Embarked'], axis = 'columns')

inputs_n

target

from sklearn import tree

clf = tree.DecisionTreeClassifier()

clf.fit(inputs_n, target)

clf.score(inputs_n, target)

print('are the passengers in the first-class and have a female gender can survive?')
clf.predict([[1, 30, 70, 0]])

print('is the passengers in the first-class and have a male gender can survive?')
clf.predict([[1, 30, 70, 1]])

print('are the passengers in the second-class and have a female gender can survive?')
clf.predict([[2, 30, 50, 0]])

print('are the passengers in the second-class and have a male gender can survive?')
clf.predict([[2, 30, 50, 1]])

print('are the passengers in the third-class and have a female gender can survive?')
clf.predict([[3, 30, 30, 0]])

print('are the passengers in the third-class and have a male gender can survive?')
clf.predict([[3, 30, 30, 1]])

print('are the passengers in the first-class and have a female gender with the oldest age can survive?')
clf.predict([[1, 70, 100, 0]])

print('are the passengers in the first-class and have a male gender with the oldest age can survive?')
clf.predict([[1, 70, 100, 1]])

print('are the passengers in the first-class with the highest fare can survive?')
clf.predict([[1, 30, 500, 1]])

print('are the passengers in the third-class with the lowest fare can survive?')
clf.predict([[3, 30, 10, 1]])

print('are the passengers in the first-class with the youngest age can survive?')
clf.predict([[1, 3, 100, 1]])